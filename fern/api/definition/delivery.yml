imports: 
  commons: commons.yml
service: 
  auth: true
  base-path: /v1/delivery
  endpoints:
    retrieve: 
      docs: Gets a single delivery
      path: /{delivery}
      path-parameters:
        delivery: string
      method: GET
      response: DeliveryResponse

    list: 
      docs: Gets all deliveries
      path: ""
      method: GET
      response: DeliveryResponse
    
    update: 
      docs: You can update the status of the delivery which will typically send notifications to the sender and recipient, depending on what notifications they have enabled. You can also update the coordinates of the delivery without updating the status for a better user experience.
      path: /{delivery}
      path-parameters:
        delivery: string
      request: 
        body: 
          properties: 
            tracking_update: optional<commons.TrackingUpdate>
            location: ## 

types: 
  DeliveryResponse: 
    extends: Response
    data: Delivery
  Delivery: 
    docs: The delivery represents a single tracking number with one or more parcels that needs to be delivered.
    properties:
      coordinates: 
        docs: The latitude and longitude of the current location
        type: list<double> ## not actually sure if this is the right way to model Array<Number, Number>
      created_at:
        docs: Time in epoch seconds when this shipment was created.
        type: integer
      updated_at:
        docs: Time in epoch seconds when this shipment was last updated.
        type: integer
      estimated_delivery:
        docs: Time in epoch seconds when we estimate the delivery will occur.
        type: optional<integer>
      filters: list<commons.Filters>
      fulfillment_id:
        docs: The ID of the fulfillment that created this shipment.
        type: string
      id:
        docs: The unique ID for the shipment
        type: string
      location_id:
        docs: The hub location to which this delivery is assigned.
        type: optional<string>
      lead_time_mins:
        docs: The amount of lead time needed to come get the parcel from the sender. This is set up in the dashboard.
        type: integer
      metadata:
        docs: Key value pairs of data that you can set for this delivery.
        type: optional<map<string, unknown>>
      organization_id:
        docs: The ID of the organization that owns this delivery
        type: string
      parcels:
        docs: The individual packages that are part of this shipment.
        type: list<commons.Parcel>
      pickup_at:
        docs: Seconds from epoch when this shipment will be picked up, if pickup is part of the rate's service level
        type: optional<integer>
      provider:
        type: optional<commons.Provider>
      recipient: commons.Recipient
      sender: commons.Sender
      status: commons.ShipmentStatus
      tracking_number:
        docs: The tracking number for this parcel if a shipment was purchased
        type: optional<string>
      tracking_url:
        docs: The url for the end user to track their shipment
        type: string
      tracking_updates:
        docs: A list of all tracking updates that occurred for this shipment from oldest to newest
        type: list<commons.TrackingUpdate>
      _search: optional<commons.Search>

