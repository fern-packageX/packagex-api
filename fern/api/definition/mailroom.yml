imports: 
  commons: commons.yml
service:
  auth: true
  base-path: /v1/entity/exposed
  endpoints: 
    addMember: 
      docs: This endpoint adds a new member to the specified building.
      path: "/member"
      method: POST
      request: 
        name: AddMemberRequest
        body: 
          properties: 
            client_id: 
              docs: Unique client id for user access verification. 
              type: uuid
            building_key: 
              docs: Unique building id for building selection
              type: uuid
            recipient_name:
              docs: Name of the recipient
              type: string
            recipient_email: 
              docs: Email of the recipient
              type: string
            recipient_phone: 
              docs: Phone number of the recipient 
              type: optional<string>
            recipient_office_num: 
              docs: Unit number of the recipient in the building.
              type: optional<string>
            recipient_floor: 
              docs: Floor number of the recipient in the building.
              type: optional<string>
            recipient_permanent_address: 
              docs: Permanent address of the recipient.
              type: optional<string>
            recipient_profile_picture:
              docs: Profile picture.
              type: optional<string>
            recipient_note: 
              docs: A specific note for recipient.
              type: optional<string>
            recipient_alternate_name: 
              docs: Alternate names / Nick names of the recipient.
              type: optional<list<string>>
            recipient_alternate_email: 
              docs: Alternate email addresses of the recipient.
              type: optional<list<string>>
            recipient_alternate_phone:
              docs: Alternate phone numbers of the recipient.
              type: optional<list<string>>
      response: 
      
    getAllMembers:
      docs: This endpoint retrieves all members within access limits of user role.
      path: "/member"
      method: GET
      request: 
        name: GetAllMembersRequest
        query-parameters: 
          client_id: 
              docs: Unique client id for user access verification. 
              type: uuid
          building_key: 
            docs: Unique building id for building selection
            type: optional<uuid> 
          group_key: 
            docs: If set, the result will only contain the recipients of a specific group.
            type: optional<uuid> 
          recipient_key:
            docs: Should contain comma separated UUID only. UUIDs of recipients for which records to show.
            type: optional<string>
          include_num_pending_items:
            docs: If true, number of pending items associated with all the recipients will also be returned. Recipients with no items in the given time window will not be returned as a result.
            type: optional<boolean>
          item_activity_type: optional<ItemActivityType> 
          include_designated_recipients_only:
            docs: If true, only designated No recipients of a group will be returned. Only compatible with group_key parameter.
            type: optional<boolean>
          include_group:
            docs: If true, the response will contain an array of json group objects.
            type: optional<boolean>
          include_inactive:
            docs: If true, the response will contain inactive recipients, otherwise only active recipients are returned.
            type: optional<boolean>
          pagination_limit:
            docs: If set, the number of records returned will be equal to this number.
            type: optional<integer>
          pagination_offset:
            docs: If set, the result records would be offset-ed by this number.
            type: optional<integer>
            required: false
          order_by: optional<OrderBy> 
    deleteMember: 
      docs: This endpoint deletes member(s) within access limits of the user role
      method: DELETE
      path: "/member/{recipient_key}?client_id={client_id}"
      path-parameters:
        recipient_key: string
        client_id: uuid
      request: 
        body: 
          properties:
            recipient_key: optional<string>
            client_id: uuid
    updateMember: 
      docs: This endpoint updates a member.
      path: "/member"
      method: PUT
      request: 
        body: 
          properties: 
            recipient_key: uuid 
            recipient_name: optional<string>
            recipient_email: string
            recipient_phone: optional<string>
            recipient_office_num: optional<string>
            recipient_floor: optional<string>
            recipient_permanent_address: optional<string>
            recipient_note: optional<string>
            recipient_alternate_name: optional<list<string>>
            recipient_alternate_email: optional<list<string>>
            recipient_alternate_phone: optional<list<string>>
    getAllPackages: 
      docs: This endpoint retrieves all item records within access limits of user role.
      path: "/package"
      method: GET
      request: 
        name: GetAllPackagesRequests
        query-parameters:
          client_id: uuid
          building_key: optional<string> 
          recipient_key: optional<string>
          group_key: optional<string> 
          include_image_links: optional<boolean> 
          include_group_recipient_items: optional<boolean> 
          include_recipient_groups: optional<boolean> 
          graph_type_filter: optional<boolean> 
          from_date: optional<date> 
          to_date: optional<date> 
          pagination_offset: optional<integer> 
          pagination_limit: optional<integer> 
          order_by: optional<string>
          order_asc: optional<boolean> 
          filter_option: FilterOption
          date_filtering: optional<boolean> 
          filter_type: optional<ItemActivityType> 
    addBulkMembers: 
      docs: This endpoint adds members to the system from a member's CSV file.
      path: "/memberbycsv"
      method: POST
      request: 
        name: AddBulkMembersRequest
        body: 
          properties: 
            client_id: uuid
            building_key: string
            csv_file: string
    getCsvUploadStatus: 
      docs: This endpoint will return the status of the uploaded CSV.
      path: "/csv/upload"
      method: GET
      request: 
        name: GetCSVUploadStatusRequest
        query-parameters:
          client_id: uuid
          building_key: string
          csv_status_key: optional<uuid>
          pagination_offset: optional<integer> 
          pagination_limit: optional<integer>
          order_by: optional<string>
          order_asc: optional<boolean>  
    getLabels: 
      docs: This endpoint retrieves all item records within access limits of user role.
      path: "/labels"
      method: GET
      request: 
        name: GetLabelsRequest
        query-parameters:
          client_id: uuid
          building_key: optional<uuid>
          mailroom_key: optional<uuid> 
    getCTARequest: 
      docs: This endpoint retrieves all item records within access limits of user role.
      path: "/requestcta"
      method: GET
      request: 
        name: GetCTARequest
        query-parameters:
          client_id: uuid
          building_key: optional<uuid>
          item_uuid: optional<uuid> 
    createCTAAction: 
      path: "/ctaaction"
      method: POST
      request: 
        name: CreateCTAActionRequest
        body:
          properties: 
            client_id: uuid
            item_action: string
            item_uuid: uuid 
            address: optional<commons.Address>
            label_key: integer
            use_existing_address: optional<boolean> 
types: 
  OrderBy: 
    enum: 
      - created_at
      - recent_notified_first
      - email
      - phone 
  ItemActivityType: 
    docs: Value will be one of 'SCAN-IN', 'SCAN-OUT', 'ALL', return member packages based on filter.
    x-enum-names: 
      - name: SCAN-IN
        value: SCAN_IN
      - name: SCAN-OUT
        value: SCAN_OUT
      - name: ALL
        value: ALL
  FilterOption: 
    enum: 
      - outstanding
      - scanned
      - overdue
      - collected
      - deleted
      - hold
      - discarded
      - snapsend
      - destroy
      - request_forward
      - request_hold
      - forward
      - legacy