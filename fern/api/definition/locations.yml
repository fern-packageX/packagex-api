imports: 
  commons: commons.yml
service:
  auth: true
  base-path: /v1/locations
  endpoints: 
    create: 
      docs: Creates a location
      path: ""
      method: POST
      request: 
        name: CreateLocationRequest
        body: 
          properties: 
            name: 
              docs: The name given to this location.
              type: string
            address: commons.Address
            kiosk_message:
              docs: If this location is using a PackageX shipping kiosk, this will be a personalized message applied to the kiosk.
              type: optional<string> 
            marketplace: optional<Marketplace> 
            access: 
              docs: Instructions how to access address
              type: optional<string> 
            pickup_types: 
              docs: The types of pickups that are available at this location.
              type: optional<list<PickupType>>
            metadata: 
              docs: Key value pairs of data that you can set for this delivery.
              type: optional<map<string, unknown>>
            operating_hours: optional<OperatingHours>
      response: LocationResponse
      examples: 
        - request: 
            body: 
              name: PackageX HQ
              address: 500 7th Ave, Floor 10, New York, NY, 92110
          response: 
            body: 
              status: 200
              data: $Location.Example1
              message: You created a location
              errors: []
              endpoint: /v1/locations

    update: 
      docs: Updates a location
      path: /{location}
      path-parameters:
        location: string
      method: POST
      request: 
        name: UpdateLocationRequest
        body: 
          properties:
            name: 
              docs: The name given to this location.
              type: string
            address: commons.Address
            kiosk_message:
              docs: If this location is using a PackageX shipping kiosk, this will be a personalized message applied to the kiosk.
              type: optional<string> 
            marketplace: optional<Marketplace> 
            access: 
              docs: Instructions how to access address
              type: optional<string> 
            pickup_types: 
              docs: The types of pickups that are available at this location.
              type: optional<list<PickupType>>
            metadata: 
              docs: Key value pairs of data that you can set for this delivery.
              type: optional<map<string, unknown>>
            operating_hours: optional<OperatingHours>
      response: LocationResponse
      examples:
        - path-parameters:
            shipment: loc_8GiCVuqZqBJi43v2WebaME
          request:
            name: PackageX HQ
            body: 
              address: 500 7th Ave, Floor 10, New York, NY, 92110
              kiosk_message: Please leave packages in the lobby
              pickup_types: ["in_person_pickup", "curbside_pickup"]
              metadata: {} 
              access: Enter through the side door on 205 W 37th
              operating_hours: 
                saturday: 
                  active: true
                  open: "9:30"
                  close: "15:45"
                sunday: 
                  active: false,
              marketplace: 
                active: false
                fees: 
                  local_amount: 500 # $5.00
                  tax_percent: 7.25
                  toll_amount: 1550 # $15.50
                capacity: 50
          response: 
            body:
              status: 200
              data: $Location.Example2
              message: You updated a location
              errors: []
              endpoint:  /v1/locations/loc_8GiCVuqZqBJi43v2WebaME
          
    retrieve: 
      docs: Gets a location
      path: /{location}
      path-parameters:
        location: string
      method: GET
      response: LocationResponse

    list: 
      docs: Gets all locations
      path: ""
      method: GET
      response: LocationResponse


    addUsers: 
      path: /{location}/users
      method: POST
      path-parameters: 
        location: string
      request: 
        name: AddUsersRequest
        body: 
          properties: 
            users: 
              docs: Add many users at once by providing an array of user IDs
              type: list<string>
            overwrite: 
              docs: Add an overwrite property to ensure that any user not on this list will be deleted.
              type: optional<boolean> 
      response: LocationResponse
      examples:
        - path-parameters: 
            location: loc_8GiCVuqZqBJi43v2WebaME
          request: 
            body: 
              users: ["2xFv1aJTgQTGGK6nWQeZ44P7hUR2", "hDfpP0P90gOuMgLOOCfdcvcyJiB3"]
              overwrite: true
          response:
            body:  
              status: 200
              data: $Location.Example3
              message: You added a list of users
              errors: []
              endpoint:  /v1/locations/loc_8GiCVuqZqBJi43v2WebaME/users

    addOneUser: 
      path: /{location}/users/{user}
      method: POST
      path-parameters: 
        location: string
        user: string
      request: 
        name: AddOneUserRequest
        body: 
          properties: 
            overwrite: 
              docs: Add an overwrite property to ensure that any user not on this list will be deleted.
              type: optional<boolean> 
      response: LocationResponse
      examples:
        - path-parameters: 
            location: loc_8GiCVuqZqBJi43v2WebaME
            user: 2xFv1aJTgQTGGK6nWQeZ44P7hUR2
          request: 
            body: 
              overwrite: false
          response: 
            body: 
              status: 200
              data: $Location.Example3
              message: You added a user
              errors: []
              endpoint:  /v1/locations/loc_8GiCVuqZqBJi43v2WebaME/2xFv1aJTgQTGGK6nWQeZ44P7hUR2/users/2xFv1aJTgQTGGK6nWQeZ44P7hUR2

    deleteUsers:
      path: /{location}/users
      method: DELETE
      path-parameters: 
        location: string
      request: 
        name: DeleteUsersRequest
        body: 
          properties: 
            users: 
              docs: Delete many users at once by providing an array of user IDs
              type: list<string>
      response: LocationResponse
      examples:
        - path-parameters: 
            location: loc_8GiCVuqZqBJi43v2WebaME
          request: 
            body: 
              users: ["2xFv1aJTgQTGGK6nWQeZ44P7hUR2", "hDfpP0P90gOuMgLOOCfdcvcyJiB3"]
              overwrite: true
          response:
            body:
              status: 200
              data: $Location.Example4
              message: You deleted a list of users
              errors: []
              endpoint: /v1/locations/loc_8GiCVuqZqBJi43v2WebaM/users

    deleteOneUsers: 
      path: /{location}/users/{user}
      method: DELETE
      path-parameters: 
        location: string
        user: string
      response: LocationResponse
      examples:
        - path-parameters: 
            location: loc_8GiCVuqZqBJi43v2WebaME
            user: 2xFv1aJTgQTGGK6nWQeZ44P7hUR2
          response:
            body: 
              status: 200
              data: $Location.Example5
              message: You deleted a user
              errors: []
              endpoint:  /v1/locations/loc_8GiCVuqZqBJi43v2WebaME/2xFv1aJTgQTGGK6nWQeZ44P7hUR2/users/2xFv1aJTgQTGGK6nWQeZ44P7hUR2

    createLayout: 
      path: /{location}/layouts
      method: POST
      path-parameters: 
        location: string
      request: 
        name: CreateParentLayoutRequest
        body: 
          properties: 
            id: 
              docs: If you don't provide an id, one will be generated for you. 
              type: optional<string>
            name: 
              docs: To create a layout you'll need to provide a name for the layout. 
              type: string
            parent_path: 
              docs: Optional on parent layouts since they are at the root
              type: string
      response: LayoutResponse
      examples:
        - path-parameters:
            location: loc_8GiCVuqZqBJi43v2WebaME
          request: 
            body:
              id: lay_aisle_1
              name: "Aisle 1"
              parent_path: "/"
          response:
            body: 
              status: 200
              data: $Layout.Example1
              message: You created a layout
              errors: []
              endpoint:  /v1/locations/loc_8GiCVuqZqBJi43v2WebaME/layouts

    addShelves: 
      path: /{location}/layouts
      method: POST
      path-parameters: 
        location: string
      request: 
        name: AddShelvesRequest
        body: 
          properties: 
            id: 
              docs: If you don't provide an id, one will be generated for you. 
              type: optional<string>
            name: 
              docs: Name of the shelf 
              type: string
            parent_path: 
              docs: Specify the parent on which to create a shelf
              type: string
      response: LayoutResponse
      examples:
        - path-parameters:
            location: loc_8GiCVuqZqBJi43v2WebaME
          request: 
            body:
              id: "lay_shelf_A"
              name: "Shelf A"
              parent_path: "/lay_aisle_1"
          response:
            body:  
              status: 200
              data: $Layout.Example2
              message: You added a shelf to Aisle 1
              errors: []
              endpoint:  /v1/locations/loc_8GiCVuqZqBJi43v2WebaME/layouts

    addBins: 
      path: /{location}/layouts
      method: POST
      path-parameters: 
        location: string
      request: 
        name: AddBinsRequest
        body: 
          properties: 
            id: 
              docs: If you don't provide an id, one will be generated for you. 
              type: optional<string>
            name: 
              docs: Name of the Bin 
              type: string
            parent_path: 
              docs: Specify the parent on which to create a shelf
              type: string
      response: LayoutResponse
      examples:
        - path-parameters:
            location: loc_8GiCVuqZqBJi43v2WebaME
          request: 
            body:
              id: "lay_binA"
              name: "Bin Alpha"
              parent_path: "/lay_aisle_1/lay_shelf_A"
          response:
            body:  
              status: 200
              data: $Layout.Example3
              message: You added a bin to shelf A
              errors: []
              endpoint:  /v1/locations/loc_8GiCVuqZqBJi43v2WebaME/layouts

    deleteLayout: 
      docs: When deleting layouts, you will just need to pass in the ID of the layouts you want to delete into the request body.
      path: /{location}/layouts
      method: DELETE
      path-parameters: 
        location: string
      request: 
        name: DeleteLayoutRequest
        body: 
          properties: 
            layouts: 
              docs: Delete many layouts at once by providing an array of layout IDs
              type: list<string>
      response: LayoutResponse
      examples:
        - path-parameters: 
            location: loc_8GiCVuqZqBJi43v2WebaME
          request: 
            body: 
              layouts: ["lay_shelf_A"]
          response: {}
      

    retrieveLayout: 
      path: /{location}/layouts/{layout}
      method: GET
      path-parameters: 
        location: string

    listLayouts: 
      path: /{location}/layouts
      method: GET
      path-parameters: 
        location: string

types: 
  LayoutResponse: 
    extends: commons.Response
    properties: 
      data: Layout
  LocationResponse: 
    extends: commons.Response
    properties: 
      data: Location
  ServiceAreas: 
    docs: The postal code service areas that are served by this location. 
    properties: 
      postal_codes: 
        docs: The postal codes for the U.S. market serviced by this location.
        type: optional<list<string>>  
  Location: 
    docs: Locations are a common way to grant specific permissions for users and API Keys, act as a hub for shipments and delivery, and house the warehouse layouts where inventory is stored.
    properties: 
      address: commons.Address
      created_at:
        docs: Time in epoch seconds when this resource was created.
        type: integer
      id: 
        docs: The unique ID of the location prefixed with loc_
        type: string
      kiosk_message:
        docs: If this location is using a PackageX shipping kiosk, this will be a personalized message applied to the kiosk.
        type: optional<string> 
      marketplace: optional<Marketplace> 
      metadata: 
        docs: Key value pairs of data that you can set for this delivery.
        type: optional<map<string, unknown>>
      name: 
        docs: The name given to this location.
        type: string
      operating_hours: optional<OperatingHours>
      organization_id:
        docs: Unique identifier for the organization that owns this delivery. This will always be your organization ID.
        type: optional<string>
      provider_instructions: 
        docs: Any details for an on demand shipping provider to know for picking up at this location.
        type: optional<string>
      pickup_types: 
        docs: The types of pickups that are available at this location.
        type: optional<list<PickupType>>
      service_areas: ServiceAreas
      terminal_location_id: 
        docs: The ID of any PackageX payment terminals that are added to this location.
        type: optional<string>
      updated_at: 
        docs: Time in epoch seconds when this resource was last updated.
        type: optional<integer>
      users: 
        docs: An array of IDs of users who have access to this location. The owner and developer roles have access to all locations by default.
        type: optional<list<string>>
    examples:
      - name: Example1
        value: 
          id: loc_8GiCVuqZqBJi43v2WebaME
          created_at: 1679245915
          name: PackageX HQ
          address: 500 7th Ave, Floor 10, New York, NY, 92110
      - name: Example2
        value: 
          id: loc_8GiCVuqZqBJi43v2WebaME
          created_at: 1679245915
          updated_at: 1679245225
          name: PackageX HQ
          address: 500 7th Ave, Floor 10, New York, NY, 92110
          kiosk_message: Please leave packages in the lobby
          pickup_types: ["in_person_pickup", "curbside_pickup"]
          metadata: {} 
          access: Enter through the side door on 205 W 37th
          operating_hours: 
            saturday: 
              active: true
              open: "9:30"
              close: "15:45"
            sunday: 
              active: false,
          marketplace: 
            active: false
            fees: 
              local_amount: 500 # $5.00
              tax_percent: 7.25
              toll_amount: 1550 # $15.50
            capacity: 50
      - name: Example3
        value: 
          id: loc_8GiCVuqZqBJi43v2WebaME
          created_at: 1679245915
          name: PackageX HQ
          address: 500 7th Ave, Floor 10, New York, NY, 92110
          users: ["2xFv1aJTgQTGGK6nWQeZ44P7hUR2", "hDfpP0P90gOuMgLOOCfdcvcyJiB3"]
      - name: Example4
        value: 
          id: loc_8GiCVuqZqBJi43v2WebaME
          created_at: 1679245915
          name: PackageX HQ
          address: 500 7th Ave, Floor 10, New York, NY, 92110
          users: []
      - name: Example3
        value: 
          id: loc_8GiCVuqZqBJi43v2WebaME
          created_at: 1679245915
          name: PackageX HQ
          address: 500 7th Ave, Floor 10, New York, NY, 92110
          users: ["hDfpP0P90gOuMgLOOCfdcvcyJiB3"]
  OperatingHours: 
    docs: The days when the location is open and the hours for each day when this location is open.
    properties: 
      monday: DayOfWeekHours
      tuesday: DayOfWeekHours
      wednesday: DayOfWeekHours
      thursday: DayOfWeekHours
      friday: DayOfWeekHours
      saturday: DayOfWeekHours
      sunday: DayOfWeekHours
  DayOfWeekHours: 
    properties: 
      active: boolean
      open: 
        docs: When this location opens in 24 hour format like - "09:30"
        type: string
      close: 
        docs: When this location closes in 24 hour format like - "17:00"
        type: string
  Fees: 
    properties: 
      local_amount: 
        docs: A fixed amount to add to a rat total for this location
        type: integer
      tax_percent: 
        docs: The percent in taxes to add to the total for a shipping rate
        type: double
      toll_amount: 
        docs: An amount to add to a shipping rate if the route crosses state or country lines
        type: integer
  Marketplace:
    docs: If an organization is an approved provider on the PackageX shipping marketplace, these are location specific properties for that service area.
    properties: 
      active: 
        docs: If this location is active on the marketplace
        type: boolean
      fees: Fees
      capacity: 
        docs: The total daily capacity for deliveries at this location
        type: integer
      remaining_capacity: 
        docs: The amount of deliveries left at this location for the day
        type: integer
  Layout: 
    docs: A location layout is an object that describes how a storage area in your location is organized. 
    properties: 
      id: 
        docs: The ID of the layout. You are able to supply your own IDs. We encourage you to prefix your IDs with lay_ since our auto-generated IDs will be prefixed that way as well.
        type: string
      name: 
        docs: The name of your layout.
        type: string
      nested_name: 
        docs: The name of the layout if it's nested inside of a parent
        type: optional<string>
      parent_path: 
        docs: The path of the parent layouts this one is nested in.
        type: string
      shared_with: 
        docs: The IDs of all organizations that this location layout is shared with.
        type: optional<list<string>> 
    examples:
      - name: Example1
        value: 
          id: "lay_aisle_1"
          name: "Aisle 1"
          parent_path: "/"
      - name: Example2
        value: 
          id: "lay_shelf_A"
          name: "Shelf A"
          nested_name: "Aisle 1, Shelf A"
          parent_path: "/lay_aisle_1"
      - name: Example3
        value: 
          id: "lay_binA"
          name: "Bin Alpha"
          nested_name: "Aisle 1, Shelf A, Bin Alpha"
          parent_path: "/lay_aisle_1/lay_shelf_A"

  LocationCache: 
    docs: Since locations are frequently accessed for user controls, pickup types, and addresses, it's important that these requests are able to be quick. We create a special cache object for locations that includes these frequently accessed properties for all locations at once.
    properties: 
      address_hash: 
        docs: The hash of the address model.
        type: string
      address_id: 
        docs: the ID of the address.
        type: string
      formatted_address:
        docs: The full string of this location's address.
        type: string
      address_textarea: 
        docs: The text area string for the address, which excludes the line2 property.
        type: string
      address_line2: 
        docs: The line2 property for the address. 
        type: string
      id: 
        docs: The ID of the location.
        type: string
      name: 
        docs: The name of the location.
        type: string
      pickup_types: 
        docs: The pickup types that are available at this location.
        type: list<PickupType> 
      users: 
        docs: An array of IDs of users who have access to this location. The owner and developer roles have access to all locations by default.
        type: list<string>
